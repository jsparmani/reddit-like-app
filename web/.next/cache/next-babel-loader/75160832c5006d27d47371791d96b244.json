{"ast":null,"code":"var _jsxFileName = \"/home/jsparmani/codes/reddit-like-app/web/src/components/InputField.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { FormControl, FormLabel, Input, FormErrorMessage } from \"@chakra-ui/core\";\nexport const InputField = (_ref) => {\n  let {\n    label,\n    size: _\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\", \"size\"]);\n\n  const [field, {\n    error\n  }] = useField(props);\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, label), __jsx(Input, _extends({}, field, props, {\n    id: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }\n  }, error) : null);\n};","map":{"version":3,"sources":["/home/jsparmani/codes/reddit-like-app/web/src/components/InputField.tsx"],"names":["React","useField","FormControl","FormLabel","Input","FormErrorMessage","InputField","label","size","_","props","field","error","name"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,KAAhC,EAAuCC,gBAAvC,QAA8D,iBAA9D;AAOA,OAAO,MAAMC,UAAqC,GAAG,UAI/C;AAAA,MAJgD;AAClDC,IAAAA,KADkD;AAElDC,IAAAA,IAAI,EAAEC;AAF4C,GAIhD;AAAA,MADCC,KACD;;AACF,QAAM,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,IAAmBX,QAAQ,CAACS,KAAD,CAAjC;AACA,SACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,KAAjC,CADJ,EAEI,MAAC,KAAD,eAAWI,KAAX,EAAsBD,KAAtB;AAA6B,IAAA,EAAE,EAAEC,KAAK,CAACE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGKD,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH5D,CADJ;AAOH,CAbM","sourcesContent":["import React, {InputHTMLAttributes} from \"react\";\nimport {useField} from \"formik\";\nimport {FormControl, FormLabel, Input, FormErrorMessage} from \"@chakra-ui/core\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n    label: string;\n    name: string;\n};\n\nexport const InputField: React.FC<InputFieldProps> = ({\n    label,\n    size: _,\n    ...props\n}) => {\n    const [field, {error}] = useField(props);\n    return (\n        <FormControl isInvalid={!!error}>\n            <FormLabel htmlFor={field.name}>{label}</FormLabel>\n            <Input {...field} {...props} id={field.name} />\n            {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n        </FormControl>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}