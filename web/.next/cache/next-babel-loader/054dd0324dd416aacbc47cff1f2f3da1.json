{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jsparmani/codes/reddit-like-app/web/src/components/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { FormControl, FormLabel, Input, FormErrorMessage } from \"@chakra-ui/core\";\nexport var InputField = function InputField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      _ = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"label\", \"size\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, label), __jsx(Input, _extends({}, field, props, {\n    id: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }\n  }, error) : null);\n};\n\n_s(InputField, \"E2Ps/Wxn5Vr7Iec8yl5nZ8hmXyg=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/home/jsparmani/codes/reddit-like-app/web/src/components/InputField.tsx"],"names":["React","useField","FormControl","FormLabel","Input","FormErrorMessage","InputField","label","_","size","props","field","error","name"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,KAAhC,EAAuCC,gBAAvC,QAA8D,iBAA9D;AAOA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAI/C;AAAA;;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,MAFIC,CAEJ,QAFFC,IAEE;AAAA,MADCC,KACD;;AAAA,kBACuBT,QAAQ,CAACS,KAAD,CAD/B;AAAA;AAAA,MACKC,KADL;AAAA,MACaC,KADb,iBACaA,KADb;;AAEF,SACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,KAAjC,CADJ,EAEI,MAAC,KAAD,eAAWI,KAAX,EAAsBD,KAAtB;AAA6B,IAAA,EAAE,EAAEC,KAAK,CAACE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGKD,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH5D,CADJ;AAOH,CAbM;;GAAMN,U;UAKgBL,Q;;;KALhBK,U","sourcesContent":["import React, {InputHTMLAttributes} from \"react\";\nimport {useField} from \"formik\";\nimport {FormControl, FormLabel, Input, FormErrorMessage} from \"@chakra-ui/core\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n    label: string;\n    name: string;\n};\n\nexport const InputField: React.FC<InputFieldProps> = ({\n    label,\n    size: _,\n    ...props\n}) => {\n    const [field, {error}] = useField(props);\n    return (\n        <FormControl isInvalid={!!error}>\n            <FormLabel htmlFor={field.name}>{label}</FormLabel>\n            <Input {...field} {...props} id={field.name} />\n            {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n        </FormControl>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}